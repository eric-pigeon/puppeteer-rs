{{autoGeneratedComment}}
use serde;
use serde::{Deserialize, Serialize};

{{#each domains}}
pub mod {{underscore domain}};
{{/each}}

pub(crate) trait Command {
    const NAME: &'static str;

    type ReturnObject: serde::de::DeserializeOwned;

    fn to_command_call(self, call_id: u64) -> CommandCall<Self>
    where
        Self: std::marker::Sized,
    {
        CommandCall {
            id: call_id,
            params: self,
            method: Self::NAME,
        }
    }
}

#[derive(Serialize, Debug)]
pub struct CommandCall<T> {
    method: &'static str,
    pub id: u64,
    params: T,
}
